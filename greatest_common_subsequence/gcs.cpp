#include <iostream>
#include <vector>
#include <algorithm> // для функции max

using namespace std;

int lcs_length(vector<int>& x, vector<int>& y) { // функция находит НОП двух векторов
    int M = x.size(); // длина 1й последовательности
    int N = y.size(); // длина 2й последовательности
    vector<vector<int>> c(M + 1, vector<int>(N + 1, 0)); // матрица, хранение длин НОП
    for (int i = 1; i <= M; i++) { 
        for (int j = 1; j <= N; j++) {
            if (x[i - 1] == y[j - 1]) { // текущий элемент является частью общей подпоследовательности
                c[i][j] = c[i - 1][j - 1] + 1; // длина на 1 больше, чем длина НОП
            } else { // элемент не является частью общей подпоследовательности
                c[i][j] = max(c[i][j - 1], c[i - 1][j]); // максимальное значение из соседних ячеек
            }
        }
    }
    return c[M][N]; // значение в правом нижнем углу таблицы - длина НОП
}

int main() {
    freopen("lcs.in", "r", stdin); // перенаправляем stdin на lcs.in
    freopen("lcs.out", "w", stdout); // перенаправляем stdout на lcs.out

    int N, M; // длина 1й последовательности, длина 2й последовательности

    cin >> N; // считываем количество элементов в 1й последовательности
    vector<int> x(N); // 1я последовательность
    for (int i = 0; i < N; i++) {
        cin >> x[i]; // заполняем элементы 1й последовательности
    }
    cin >> M; // считываем количество элементов во 2й последовательности
    vector<int> y(M); // 2я последовательность
    for (int j = 0; j < M; j++) {
        cin >> y[j]; // заполняем элементы 2й последовательности
    }

    int lcs_len = lcs_length(x, y); // нахождение НОП

    cout << lcs_len << endl; // вывод результата в файл

    return 0;
}

// Пусть "наибольшая общая подпоследовательность" = "НОП"

// Алгоритм: динамическое программирование, построение таблицы всех возможных подпоследовательностей 1й и 2й последовательностей
// Сложность O(MN), где M и N - длины двух последовательностей.

// В таблице ниже приведен пример заполнения массива для строки "1 2 3" и "2 1 3 5"
// |   |   | 2 | 1 | 3 | 5 |
// ----|---|---|---|---|---|
// |   | 0 | 0 | 0 | 0 | 0 |
// | 1 | 0 | 0 | 1 | 1 | 1 |
// | 2 | 0 | 1 | 1 | 1 | 1 |
// | 3 | 0 | 1 | 1 | 2 | 2 |